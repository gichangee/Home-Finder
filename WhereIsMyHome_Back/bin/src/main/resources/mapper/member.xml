<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.member.model.mapper.MemberMapper">

	<select id="loginMember" parameterType="map" resultType="memberDto">
		select *
		from
		users
		where user_id = #{user_id} and user_password =
		#{user_password}
	</select>

	<insert id="join" parameterType="map">
		insert into users
		(user_id,user_password,user_name,email_id,email_domain,join_date)
		values
		(#{user_id},#{user_password},#{user_name},#{email_id},#{email_domain},now())
	</insert>

	<select id="findPassword" parameterType="map"
		resultType="String">
		select user_password
		from users
		where user_id = #{user_id}
	</select>

	<update id="editUserInfo" parameterType="map">
		UPDATE users
		SET
		user_password = #{user_password},
		user_name = #{user_name},
		email_id =
		#{email_id},
		email_domain = #{email_domain}

		WHERE user_id = #{user_id}

	</update>

	<select id="getUserInfo" parameterType="map">
		select *
		from users
		where user_id = #{user_id}
	</select>

	<select id="isCheckedPasswordBeforeDelete" parameterType="map" resultType="boolean">
		SELECT COUNT(*) > 0
		from users
		where user_password = #{user_password} and user_id = #{user_id}
	</select>
	
	<delete id="deleteMember" parameterType="String">
		delete from users
		where user_id=#{user_id}
	</delete>
		<select id="userInfo" parameterType="string" resultType="memberDto">
		select user_name, user_id, email_id, email_domain, join_date
		from users
		where user_id = #{userId}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update users
		set token = #{token}
		where user_id = #{userId}
	</update>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from users
		where user_id = #{userId}
	</select>
	
	<update id="deleteRefreshToken" parameterType="map">
		update users
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>
	<select id="emailCofirm"  parameterType="map" resultType="memberDto">
		select *
		from users
		where email_id=#{email_id} and email_domain=#{email_domain}
	</select>
</mapper>